// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var EmptyStatement, Node;
  Node = require('../node');
  EmptyStatement = function (super$) {
    extends$(EmptyStatement, super$);
    function EmptyStatement() {
      super$.apply(this, arguments);
    }
    EmptyStatement.prototype.type = EmptyStatement.name;
    return EmptyStatement;
  }(Node);
  module.exports = function () {
    return new EmptyStatement;
  };
  function isOwn$(o, p) {
    return {}.hasOwnProperty.call(o, p);
  }
  function extends$(child, parent) {
    for (var key in parent)
      if (isOwn$(parent, key))
        child[key] = parent[key];
    function ctor() {
      this.constructor = child;
    }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor;
    child.__super__ = parent.prototype;
    return child;
  }
}.call(this);
