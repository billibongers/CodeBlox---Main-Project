'use strict';

/* @flow */

var _require = require('./projectz-util.js');

var getPeopleHTML = _require.getPeopleHTML;

var spdxParse = require('spdx').parse;
var spdxList = require('spdx-license-list/spdx-full');

function renderSpdxObject(spdxObject /* :Object */, output /* :"description"|"body" */) /* :string */{
	var depth = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];

	if (spdxObject.license) {
		var code = spdxObject.license;
		var details = spdxList[code];

		if (!details) {
			throw new Error('Could not find the details for the license ' + code);
		}

		var name = details.name;
		var body = details.license;
		var url = 'http://spdx.org/licenses/' + code + '.html';

		return output === 'description' ? depth === 0 ? '<ul><li><a href="' + url + '">' + name + '</a></li></ul>' : '<a href="' + url + '">' + name + '</a>' : body
		// Remove useless copyright headers
		.replace('\nCopyright (c) <year> <copyright holders>\n', '')

		// Remove license introductions
		.replace(/^[\s\S]+<<endOptional>>\s*/m, '')

		// Convert the license into HTML
		.replace(/^(.+?)\n\s*([\s\S]+)\s*$/, '<h2>$1</h2>\n\n<pre>\n$2\n</pre>');
	} else if (spdxObject.conjunction) {
		var left = renderSpdxObject(spdxObject.left, output, depth + 1);
		var middle = spdxObject.conjunction;
		var right = renderSpdxObject(spdxObject.right, output, depth + 1);
		return output === 'description' ? '<ul><li>' + left + '</li>\n<li>' + middle + '</li>\n<li>' + right + '</li></ul>' : (left + '\n\n' + right + '\n\n').trim();
	} else {
		throw new Error('Unknown spdx object value: ' + JSON.stringify(spdxObject, null, '  '));
	}
}

function getLicensesHTML(spdxString /* :string */, output /* :"description"|"body" */) /* :string */{
	var sdpxObject = spdxParse(spdxString);
	return renderSpdxObject(sdpxObject, output);
}

function getLicenseIntroduction(data /* :Object */) /* :string */{
	// Check
	if (!data.license) {
		throw new Error('License file was requested, but no license was specified');
	}

	// Prepare
	var result = ['Unless stated otherwise all works are:', '', getPeopleHTML(data.authors, { displayCopyright: true, displayYears: true }), '', 'and licensed under:', '', getLicensesHTML(data.license, 'description')].join('\n');

	// Return
	return result;
}

function getLicenseFile(data /* :Object */) /* :string */{
	// Check
	if (!data.license) {
		throw new Error('License file was requested, but no license was specified');
	}

	// Prepare
	var result = ['<h1>License</h1>', '', getLicenseIntroduction(data), '', getLicensesHTML(data.license, 'body')].join('\n');

	// Return
	return result;
}

function getLicenseSection(data /* :Object */) /* :string */{
	// Prepare
	var result = ['<h2>License</h2>', '', getLicenseIntroduction(data)].join('\n');

	// Return
	return result;
}

// Exports
module.exports = { getLicensesHTML: getLicensesHTML, getLicenseIntroduction: getLicenseIntroduction, getLicenseFile: getLicenseFile, getLicenseSection: getLicenseSection };