{
  "name": "pseudorandombytes",
  "version": "2.0.0",
  "description": "pseudoRandomBytes ===",
  "main": "index.js",
  "browser": "browser.js",
  "scripts": {
    "test": "node test.js"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {
    "create-hash": "^1.1.2",
    "create-hmac": "^1.1.4",
    "randombytes": "^2.0.0"
  },
  "devDependencies": {
    "through2": "^0.6.3"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:crypto-browserify/pseudorandombytes.git"
  },
  "readme": "pseudoRandomBytes\n===\n\ncrypto.pseudoRandomBytes but for use with browserify.  In node it just returns crypto.pseudoRandomBytes but in the browser it uses  [crypto-browserify/randombytes](https://github.com/crypto-browserify/randombytes) if available else it seeds a prng based on [chacha20poly1305](https://github.com/calvinmetcalf/chacha20poly1305).\n\nTo use:\n====\n\n```js\nvar pseudoRandomBytes = require('pseudorandomBbytes');\n\nvar bytes = pseudoRandomBytes(34);\n```\n\nTo be clear there is no legitimate reason for you ever to want to use this.\n\n# The algorithms used in this module are **NOT** suitable for cryptographical usage. \n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/crypto-browserify/pseudorandombytes/issues"
  },
  "_id": "pseudorandombytes@2.0.0",
  "_from": "pseudorandombytes@^2.0.0"
}
