// Generated by CoffeeScript 1.6.2
var ConsoleReporter, ListReporter, isWindows, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ConsoleReporter = require('joe-reporter-console');

isWindows = (typeof process !== "undefined" && process !== null ? (_ref = process.platform) != null ? _ref.indexOf('win') : void 0 : void 0) === 0;

ListReporter = (function(_super) {
  __extends(ListReporter, _super);

  ListReporter.prototype.startSuite = function() {};

  ListReporter.prototype.startTest = function() {};

  ListReporter.prototype.finishSuite = function() {};

  function ListReporter(config) {
    var _base, _base1, _ref1, _ref2;

    this.config || (this.config = config || {});
    if ((_ref1 = (_base = this.config).fail) == null) {
      _base.fail = isWindows ? 'ERR! ' : '✘  ';
    }
    if ((_ref2 = (_base1 = this.config).pass) == null) {
      _base1.pass = isWindows ? 'OK   ' : '✔  ';
    }
    ListReporter.__super__.constructor.apply(this, arguments);
  }

  ListReporter.prototype.finishTest = function(test, err) {
    var check, message, name;

    name = this.getItemName(test);
    if (!name) {
      return this;
    }
    check = (err ? this.config.fail : this.config.pass);
    message = "" + check + name;
    console.log(message, (typeof process !== "undefined" && process !== null) === false && err ? [err, err.stack] : '');
    return this;
  };

  ListReporter.prototype.exit = function(exitCode) {
    var err, errorLog, errorLogs, index, name, suite, test, totalErrors, totalFailedTests, totalIncompleteTests, totalPassedTests, totalTests, _i, _len, _ref1;

    _ref1 = this.joe.getTotals(), totalTests = _ref1.totalTests, totalPassedTests = _ref1.totalPassedTests, totalFailedTests = _ref1.totalFailedTests, totalIncompleteTests = _ref1.totalIncompleteTests, totalErrors = _ref1.totalErrors;
    if (exitCode) {
      errorLogs = this.joe.getErrorLogs();
      console.log("\n" + this.config.summaryFail, totalPassedTests, totalTests, totalFailedTests, totalIncompleteTests, totalErrors);
      for (index = _i = 0, _len = errorLogs.length; _i < _len; index = ++_i) {
        errorLog = errorLogs[index];
        suite = errorLog.suite, test = errorLog.test, name = errorLog.name, err = errorLog.err;
        name || (name = this.getItemName(test || suite));
        console.log("\n" + this.config.failHeading, index + 1);
        console.log("" + name + "\n" + (err.stack.toString()));
      }
    } else {
      console.log("\n" + this.config.summaryPass, totalPassedTests, totalTests);
    }
    return console.log('');
  };

  return ListReporter;

})(ConsoleReporter);

module.exports = ListReporter;
