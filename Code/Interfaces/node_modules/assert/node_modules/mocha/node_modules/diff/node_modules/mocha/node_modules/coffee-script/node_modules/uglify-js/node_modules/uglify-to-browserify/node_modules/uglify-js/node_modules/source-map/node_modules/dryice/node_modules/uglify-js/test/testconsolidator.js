#! /usr/bin/env node
global.DIGITS_OVERRIDE_FOR_TESTING = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789";

'use strict';
/*jshint bitwise:true, curly:true, eqeqeq:true, forin:true, immed:true,
     latedef:true, newcap:true, noarge:true, noempty:true, nonew:true,
     onevar:true, plusplus:true, regexp:true, undef:true, strict:true,
     sub:false, trailing:true */

var _,
    /**
     * NodeJS module for unit testing.
     * @namespace
     * @type {!TAssert}
     * @see http://nodejs.org/docs/v0.6.10/api/all.html#assert
     */
    oAssert = (/** @type {!TAssert} */ require('assert')),
    /**
     * Consolidates null, Boolean, and String values found inside an
     * <abbr title="abstract syntax tree">AST</abbr>. The object under test.
     * @namespace
     * @type {!TConsolidator}
     */
    oConsolidator = (/** @type {!TConsolidator} */ require('../lib/consolidator')),
    /**
     * The parser of ECMA-262 found in UglifyJS.
     * @namespace
     * @type {!TParser}
     */
    oParser = (/** @type {!TParser} */ require('../lib/parse-js')),
    /**
     * The processor of <abbr title="abstract syntax tree">AST</abbr>s
     * found in UglifyJS.
     * @namespace
     * @type {!TProcessor}
     */
    oProcessor = (/** @type {!TProcessor} */ require('../lib/process')),
    /**
     * An instance of an object that allows the traversal of an <abbr
     * title="abstract syntax tree">AST</abbr>.
     * @type {!TWalker}
     */
    oWalker,
    /**
     * A collection of functions for the removal of the scope information
     * during the traversal of an <abbr title="abstract syntax tree"
     * >AST</abbr>.
     * @namespace
     * @type {!Object.<string, function(...[*])>}
     */
    oWalkersPurifiers = {
      /**#nocode+*/  // JsDoc Toolkit 2.4.0 hides some of the keys.
      /**
       * Deletes the scope information from the branch of the abstract
       * syntax tree representing the encountered function declaration.
       * @param {string} sIdentifier The identifier of the function.